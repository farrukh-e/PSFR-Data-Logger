
Tasks to distribute :
	
	1) Convert CAD model of the car to yaml file for rviz vizualization
	https://github.com/AMZ-Driverless/fssim/tree/master/fssim_description/cars/gotthard

	2) Make an electric powertrain model of the car in matlab to size the battery pack

	3) Display still needs to be programmed (Python 2.7 or C++)
	to work with nvidia jetson
	https://www.itead.cc/blog/how-to-use-nextion-to-work-with-raspberry-pi
	Do it using ubuntu instead of raspbian
	http://acoptex.com/project/7210/raspberry-basics-project-31a-raspberry-pi-zero-w-board-and-nextion-hmi-display-at-acoptexcom/#sthash.X3dg8NRi.dpbs
	4) electronics enclosure and mounting
	5) cutting spark and fuel through can/digital input 

	4) Look into lqr and mpc controller difference and implemetation?

Tasks to complete:
	easy stuff (Friday)
	1) wire and configure imu  
	2) add imu scipt into data aqusition code (use Ros imu message)
	3) set up the second can bus
	
	4) get ode equations for the car dynamics(Next week)
		take encoder data convert to linear velocity
		take imu data and compare to encoder readings

	5) write tc node (look into mpc/ lqr controller options)
		control engine torque(fuel cut/spark cut) to regulate wheel slip

Goals revised:
	Dynamics model & state estimation:	Estimate the state of the car using dynamics equations and data from the car to lay fundation for controls.
	How?: write a simple function that does necessary calculations in  		a sequency
		Use numpy and matrix operations
		Known values: (angular velocity, linear velocity, acceleration, steering angle, orientation, geometry of the car, weight per corner)
		Unknown values: (Wheel slip, load on tires, drag, aero load)

	Odometry:
	Traction Control: